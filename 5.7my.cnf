[client]
# 设置mysql客户端默认字符集为 utf8mb4，支持存储更多字符（如emoji）
default-character-set=utf8mb4

# 设置mysql客户端与数据库的连接 socket 文件路径
socket=/data/mysql/mysql.sock

[mysqld]
# MySQL服务端监听端口，默认是3306
port = 3306
default-time-zone = '+08:00'
log_timestamps = SYSTEM

# MySQL数据目录的路径，存储所有数据库文件
datadir=/data/mysql

# 服务端 socket 文件路径
socket=/data/mysql/mysql.sock

# 禁用符号链接，增强安全性，防止可能的安全风险
symbolic-links=0

# MySQL 服务的进程 ID 文件路径，存储 MySQL 服务的 PID
pid-file=/var/run/mysqld/mysqld.pid

# 允许的最大连接数，默认值是151，设置为2000提高并发连接能力
max_connections=2000

# 每个 MySQL 用户连接的最大连接数
max_user_connections=2000

# 客户端空闲连接的最大超时时间，单位是秒，默认为8小时（28800秒）
wait_timeout=3600  # 设置为1小时，防止连接闲置过久

# MySQL 会话连接的最大超时时间，单位是秒，设置为 80小时
interactive_timeout=288000  # 设置为80小时，通常用于较长时间的查询连接

# 唯一的 MySQL 服务 ID，用于主从复制时标识不同的 MySQL 实例
server_id=129

# 启用二进制日志，用于记录所有数据库操作，支持主从复制
log_bin = mysql-bin

# 设置二进制日志的格式为 ROW，记录每行的数据变化
binlog_format = ROW

# 设置自动清理过期日志，保存最近7天的日志
expire_logs_days = 7

# 错误日志文件路径
log-error=/var/log/mysqld.log

# 设置慢查询的阈值，超过3秒的查询会被记录
long_query_time=3

# 开启慢查询日志，记录超过long_query_time时间的查询
slow_query_log = on

# 设置慢查询日志文件路径
slow-query-log-file = /data/mysql/slowquery.log

# 设置 InnoDB 缓冲池大小，建议配置为物理内存的 60%-70%
innodb_buffer_pool_size = 8G  # 增大缓冲池，提高性能

# 设置 InnoDB 日志缓冲区大小
innodb_log_buffer_size=64M

# 设置 InnoDB 日志文件大小
innodb_log_file_size=2G

# 每次提交事务时刷新日志，确保事务日志不会丢失
innodb_flush_log_at_trx_commit=1

# 设置 SQL 模式，确保数据一致性和严格的约束
sql_mode = 'NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'

# 设置主从复制信息存储为表的形式，方便管理和恢复
master_info_repository = TABLE

# 设置中继日志信息存储为表的形式
relay_log_info_repository = TABLE

# 设置是否区分大小写，1表示不区分大小写（在Windows中默认值）
lower_case_table_names = 1

# 限制 InnoDB 临时表文件最大大小为 2GB，防止磁盘被占满
innodb_temp_data_file_path=ibtmp1:12M:autoextend:max:2G

# 2025-4-19新增配置，优化 InnoDB 的事务日志和回滚操作
innodb_undo_tablespaces = 2      # 建议设置为 2~3 个独立的 Undo 表空间，提升性能和可维护性
innodb_undo_log_truncate = ON    # 启用自动清理，确保 undo log 不会无限增长
innodb_max_undo_log_size = 1G    # 设置触发 undo 清理的最大阈值，避免 undo log 文件无限增长
